{"ast":null,"code":"var _jsxFileName = \"/home/francisco/Dev/Projetos/calculadora-juros-compostos/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Installments from './components/Installments';\nimport css from './components/global.module.css';\nexport default function App() {\n  const [capital, setCapital] = useState(100);\n  const [taxa, setTaxa] = useState(0);\n  const [periodo, setPeriodo] = useState(1);\n  const [resultados, setResultados] = useState([]);\n  useEffect(() => {\n    let capitalTotal = 0;\n    let valorMensal = 0;\n    let porcentagem = 0;\n\n    for (let i = 1; i <= periodo; i++) {\n      capitalTotal = capital * (1 + taxa / 100) ** i;\n      valorMensal = capitalTotal - capital;\n      porcentagem = valorMensal / capital;\n      const resultadoExistente = resultados.find(resultado => {\n        return resultado.periodo === i;\n      });\n\n      if (resultadoExistente) {\n        resultadoExistente.total = capitalTotal;\n        resultadoExistente.valorMensal = valorMensal;\n        resultadoExistente.porcentagem = porcentagem;\n        setResultados([...resultados]);\n      } else {\n        setResultados([...resultados, {\n          periodo: i,\n          total: capitalTotal,\n          valorMensal: valorMensal,\n          porcentagem: porcentagem\n        }]);\n      }\n    }\n  }, [capital, taxa, periodo]);\n\n  const handleForm = (capital, juros, periodo) => {\n    setCapital(capital);\n    setTaxa(juros);\n    setPeriodo(periodo);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: `${css.title} center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"small material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"polymer\"), \"\\xA0Calculadora de Juros Compostos\")), /*#__PURE__*/React.createElement(Header, {\n    capital: capital,\n    taxa: taxa,\n    periodo: periodo,\n    onForm: handleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), resultados && /*#__PURE__*/React.createElement(Installments, {\n    resultados: resultados,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 22\n    }\n  }));\n}","map":{"version":3,"sources":["/home/francisco/Dev/Projetos/calculadora-juros-compostos/src/App.js"],"names":["React","useState","useEffect","Header","Installments","css","App","capital","setCapital","taxa","setTaxa","periodo","setPeriodo","resultados","setResultados","capitalTotal","valorMensal","porcentagem","i","resultadoExistente","find","resultado","total","handleForm","juros","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Installments from './components/Installments';\nimport css from './components/global.module.css';\n\nexport default function App() {\n  const [capital, setCapital] = useState(100);\n  const [taxa, setTaxa] = useState(0);\n  const [periodo, setPeriodo] = useState(1);\n  const [resultados, setResultados] = useState([]);\n\n  useEffect(() => {\n    let capitalTotal = 0;\n    let valorMensal = 0;\n    let porcentagem = 0;\n\n    for (let i = 1; i <= periodo; i++) {\n      capitalTotal = capital * (1 + taxa / 100) ** i;\n\n      valorMensal = capitalTotal - capital;\n\n      porcentagem = valorMensal / capital;\n\n      const resultadoExistente = resultados.find((resultado) => {\n        return resultado.periodo === i;\n      });\n\n      if (resultadoExistente) {\n        resultadoExistente.total = capitalTotal;\n        resultadoExistente.valorMensal = valorMensal;\n        resultadoExistente.porcentagem = porcentagem;\n\n        setResultados([...resultados]);\n      } else {\n        setResultados([\n          ...resultados,\n          {\n            periodo: i,\n            total: capitalTotal,\n            valorMensal: valorMensal,\n            porcentagem: porcentagem,\n          },\n        ]);\n      }\n    }\n  }, [capital, taxa, periodo]);\n\n  const handleForm = (capital, juros, periodo) => {\n    setCapital(capital);\n    setTaxa(juros);\n    setPeriodo(periodo);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <h3 className={`${css.title} center`}>\n          <i className=\"small material-icons\">polymer</i>\n          &nbsp;Calculadora de Juros Compostos\n        </h3>\n      </div>\n\n      <Header\n        capital={capital}\n        taxa={taxa}\n        periodo={periodo}\n        onForm={handleForm}\n      />\n\n      {resultados && <Installments resultados={resultados} />}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}